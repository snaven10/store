@model store.Models.stores

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>stores</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="row">
                <div class="col-12">
                    <div class="form-group">
                        <label asp-for="Nombre" class="control-label"></label>
                        <input asp-for="Nombre" class="form-control" />
                        <span asp-validation-for="Nombre" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-12">
                    <div class="form-group">
                        <label asp-for="Direccion" class="control-label"></label>
                        <input asp-for="Direccion" class="form-control" />
                        <span asp-validation-for="Direccion" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-12">
                    <div class="row">
                        <div class="col-4">
                            <div class="form-group">
                                <label asp-for="Telefono" class="control-label"></label>
                                <input asp-for="Telefono" class="form-control" />
                                <span asp-validation-for="Telefono" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <label asp-for="Longitud" class="control-label"></label>
                                <input asp-for="Longitud" class="form-control" />
                                <span asp-validation-for="Longitud" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="form-group">
                                <label asp-for="Latitud" class="control-label"></label>
                                <input asp-for="Latitud" class="form-control" />
                                <span asp-validation-for="Latitud" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-12">
                            <div id="map"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAPvk8rAMtNURF5ZPjq6ug6rYNH78V23TQ&callback=initMap&libraries=&v=weekly" async></script>
<script>
    let map, infoWindow;
    function initMap() {
        map = new google.maps.Map(document.getElementById("map"), {
            center: { lat: -34.397, lng: 150.644 },
            zoom: 6,
        });
        infoWindow = new google.maps.InfoWindow();
        const locationButton = document.createElement("button");
        locationButton.textContent = "Pan to Current Location";
        locationButton.classList.add("custom-map-control-button");
        map.controls[google.maps.ControlPosition.TOP_CENTER].push(locationButton);
        locationButton.addEventListener("click", () => {
            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };
                        infoWindow.setPosition(pos);
                        infoWindow.setContent("Location found.");
                        infoWindow.open(map);
                        map.setCenter(pos);
                    },
                    () => {
                        handleLocationError(true, infoWindow, map.getCenter());
                    }
                );
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false, infoWindow, map.getCenter());
            }
        });
    }

    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(
            browserHasGeolocation
                ? "Error: The Geolocation service failed."
                : "Error: Your browser doesn't support geolocation."
        );
        infoWindow.open(map);
    }
</script>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
